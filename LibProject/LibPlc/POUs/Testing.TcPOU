<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1">
  <POU Name="Testing" Id="{b6acff85-0853-0c5e-1d96-b2ec4e069e6e}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM Testing
VAR
	_I_AmeClt				:I_AmeClt := APIs._AmeClt;
	_sSfc					:STRING := 'Testing_SFC';
	_sMsgToSend				:STRING(P_AmeClt.MAX_SIZE_MSG_TO_SEND);
	_sMsgReceived			:STRING(P_AmeClt.MAX_SIZE_MSG_TO_RCV);
	
	_bAssyGetDetails		:BOOL;
	_bAssyComplete			:BOOL;
	_uiAssyCompleteCycles	:UINT;
	
	_sSrc					:STRING(2000) := '1234Hola';
	_sStrToFind				:STRING(10) := '';
	_udiStrToFindIndexPos	:UDINT;
	_bLeft					:BOOL;
	_udiLeftIndex			:UDINT;
	_sStrleft				:STRING;
	_bRight					:BOOL;
	_udiRightIndex			:UDINT;
	_sStrRight				:STRING(2000);
	
	
	
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF _bAssyGetDetails OR _bAssyComplete THEN
	_uiAssyCompleteCycles := _uiAssyCompleteCycles + 1;
END_IF

IF _bAssyComplete  AND_THEN _I_AmeClt.AssyComplete_3011(_sSfc, E_AssyState.PASS, 1) THEN
	_sMsgToSend := _I_AmeClt.sMsgToSend;
	_sMsgReceived := _I_AmeClt.sMsgReceived;
	_bAssyComplete := FALSE;
END_IF

IF _bAssyGetDetails  AND_THEN _I_AmeClt.AssyGetDetails_1026(_sSfc, 1) THEN
	_sMsgToSend := _I_AmeClt.sMsgToSend;
	_sMsgReceived := _I_AmeClt.sMsgReceived;
	_bAssyGetDetails := FALSE;
END_IF

//_udiStrToFindIndexPos := f_StringFind(ADR(_sSrc), SIZEOF(_sSrc), _sStrToFind);
_udiStrToFindIndexPos := f_StringFind(ADR(_sSrc), SIZEOF(_sSrc), 'Handle_00:') + f_StringLen(ADR('Handle_00:'), SIZEOF('Handle_00:'));

_bRight := f_StringRight(ADR(_sSrc), ADR(_sStrRight), SIZEOF(_sStrRight), _udiStrToFindIndexPos);

_bLeft := f_StringLeft(ADR(_sSrc), ADR(_sStrLeft), SIZEOF(_sStrLeft), _udiLeftIndex);

//_bRight := f_StringRight(ADR(_sSrc), ADR(_sStrRight), SIZEOF(_sStrRight), _udiRightIndex);
]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>